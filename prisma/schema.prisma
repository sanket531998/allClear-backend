// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum PremiumCategoriesTypes {
    BASIC
    PREMIUM
    PREMIUM_PLUS
}

model User {
  id          Int    @id @default(autoincrement())
  email       String @unique
  password    String
  firstName   String
  lastName    String
  phoneNumber Int?
  role        Role   @default(USER)

  categories Categories[] // Add this line to establish the relation
  articles Articles[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Categories {
  categoryId  Int    @id @default(autoincrement())
  category    String
  subCategory String
  description String @db.Text

  createdBy     Int // User ID is an Int
  createdByUser User @relation(fields: [createdBy], references: [id])

  articles Articles[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model PremiumCategories {
  premiumCategoriesTypeId Int @id @default(autoincrement())
  premiumCategory PremiumCategoriesTypes  @unique
  description String

  articles Articles[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@map("premiumCategories")
}

model Articles {
  articlesId Int @id @default(autoincrement())
  title String
  author String
  content String  @db.Text 

  categoryType Int
  categoryTypeReference Categories @relation(fields: [categoryType], references: [categoryId])

  addedBy Int
  addedByUser User @relation(fields: [addedBy], references: [id])

  premiumCategoryType Int
  premiumCategoryReference PremiumCategories @relation(fields: [premiumCategoryType] , references: [premiumCategoriesTypeId])

   
  location String 
  totalReads Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@map("articles")
}